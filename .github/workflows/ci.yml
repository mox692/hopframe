name: CI

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-nextest
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest

      - uses: Swatinem/rust-cache@v2
      - name: Tests run with all features
        run: |
          cargo nextest run --all-features
        env:
          RUSTFLAGS: -C force-frame-pointers=yes

  cross-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - target: armv5te-unknown-linux-gnueabi
            os: ubuntu-latest
          - target: armv5te-unknown-linux-gnueabi
            os: macos-latest
          - target: armv7-unknown-linux-gnueabihf
            os: ubuntu-22.04-arm
          - target: armv7-unknown-linux-gnueabihf
            os: macos-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-22.04-arm
          - target: aarch64-unknown-linux-gnu
            os: macos-latest
          - target: aarch64-pc-windows-msvc
            os: windows-11-arm
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Install cargo-nextest
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest

      - uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.target }}
          qemu: '7.2'

      - uses: Swatinem/rust-cache@v2
      - name: Tests run with all features (including parking_lot)
        run: |
          cargo nextest run --all-features --target ${{ matrix.target }}
        env:
          RUSTFLAGS: -C force-frame-pointers=yes
